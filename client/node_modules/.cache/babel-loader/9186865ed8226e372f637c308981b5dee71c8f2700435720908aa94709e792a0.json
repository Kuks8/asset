{"ast":null,"code":"import React,{useState}from'react';import{Form,Input,Button,Table,Space}from'antd';import{PlusOutlined,EditOutlined,SaveOutlined}from'@ant-design/icons';import{useNavigate}from'react-router-dom';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faUserCircle}from'@fortawesome/free-solid-svg-icons';import'../dashboard.css';import Sidebar from'./Sidebar';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const OtherSettings=()=>{const navigate=useNavigate();const[form]=Form.useForm();const[assetTypes,setAssetTypes]=useState([]);const[editingKey,setEditingKey]=useState('');const[newAssetType,setNewAssetType]=useState('');const handleLogout=e=>{e.preventDefault();console.log('Logging out');navigate('/login');};const isEditing=record=>record.key===editingKey;const addAssetType=()=>{setAssetTypes([...assetTypes,{key:Date.now().toString(),type:newAssetType}]);setNewAssetType('');form.resetFields();};const edit=record=>{form.setFieldsValue({type:record.type});setEditingKey(record.key);};const save=async key=>{try{const row=await form.validateFields();const newData=[...assetTypes];const index=newData.findIndex(item=>key===item.key);if(index>-1){const item=newData[index];newData.splice(index,1,{...item,...row});setAssetTypes(newData);setEditingKey('');}else{newData.push(row);setAssetTypes(newData);setEditingKey('');}}catch(errInfo){console.log('Validate Failed:',errInfo);}};const columns=[{title:'Asset Type',dataIndex:'type',key:'type',editable:true},{title:'Actions',dataIndex:'actions',key:'actions',render:(_,record)=>{const editable=isEditing(record);return editable?/*#__PURE__*/_jsx(Space,{children:/*#__PURE__*/_jsx(Button,{onClick:()=>save(record.key),icon:/*#__PURE__*/_jsx(SaveOutlined,{})})}):/*#__PURE__*/_jsx(Space,{children:/*#__PURE__*/_jsx(Button,{disabled:editingKey!=='',onClick:()=>edit(record),icon:/*#__PURE__*/_jsx(EditOutlined,{})})});}}];const mergedColumns=columns.map(col=>{if(!col.editable){return col;}return{...col,onCell:record=>({record,inputType:'text',dataIndex:col.dataIndex,title:col.title,editing:isEditing(record)})};});const EditableCell=_ref=>{let{editing,dataIndex,title,inputType,record,index,children,...restProps}=_ref;return/*#__PURE__*/_jsx(\"td\",{...restProps,children:editing?/*#__PURE__*/_jsx(Form.Item,{name:dataIndex,style:{margin:0},rules:[{required:true,message:\"Please Input \".concat(title,\"!\")}],children:/*#__PURE__*/_jsx(Input,{})}):children});};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard_wrapper\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"Header\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faUserCircle,className:\"topnav-right\",onClick:handleLogout}),/*#__PURE__*/_jsx(\"h2\",{className:\"dashboard-h2\",children:\"Asset Settings\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboardpage\",children:[/*#__PURE__*/_jsxs(Form,{layout:\"inline\",form:form,children:[/*#__PURE__*/_jsx(Form.Item,{name:\"type\",rules:[{required:true,message:'Please input the asset type!'}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"Add new asset type\",value:newAssetType,onChange:e=>setNewAssetType(e.target.value)})}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:addAssetType,icon:/*#__PURE__*/_jsx(PlusOutlined,{}),children:\"Add\"})})]}),/*#__PURE__*/_jsx(Form,{form:form,component:false,children:/*#__PURE__*/_jsx(Table,{components:{body:{cell:EditableCell}},bordered:true,dataSource:assetTypes,columns:mergedColumns,rowClassName:\"editable-row\",pagination:false})})]})]});};export default OtherSettings;// import React, {useState, useContext, createContext} from 'react';\n// import { Form, Input, Select, DatePicker, InputNumber, Upload, Button, Space, Avatar } from 'antd';\n// import { UploadOutlined, UserOutlined, PlusOutlined } from '@ant-design/icons';\n// import { useNavigate } from 'react-router-dom';\n// import {Card } from 'antd';\n// import {Flex, Tooltip} from 'antd';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faUserCircle } from '@fortawesome/free-solid-svg-icons';\n// import Sidebar from './Sidebar';\n// import '../dashboard.css';\n// const OtherSettings = () => {\n//     const navigate = useNavigate(); \n//     const { Option } = Select;\n//     // const { assetTypes, setAssetTypes } = useContext(AssetTypeContext);\n//     const [profilePicture, setProfilePicture] = useState(null);\n//     const [newAssetType, setNewAssetType] = useState('');\n//       const onFinish = (values) => {\n//         console.log('Received values:', values);\n//       };\n//       const handleUpload = (info) => {\n//         const reader = new FileReader();\n//         reader.onload = e => {\n//           setProfilePicture(e.target.result);\n//         };\n//         reader.readAsDataURL(info.file.originFileObj);\n//       };\n//       const handleLogout = (e) => {\n//         e.preventDefault();\n//         console.log('Logging out');\n//         navigate('/login');\n//       };\n//       // const handleAddAssetType = () => {\n//       //   setAssetTypes([...assetTypes, newAssetType]);\n//       //   setNewAssetType('');\n//       // };\n//       const columns = [\n//         {\n//           title: 'Asset Type',\n//           dataIndex: 'type',\n//           key: 'type',\n//         },\n//       ];\n//       // const data = assetTypes.map((type, index) => ({ key: index, type }));\n//       return (\n//         <div className=\"dashboard_wrapper\">\n//         <Sidebar/>\n//             <div className=\"Header\">\n//             <FontAwesomeIcon \n//             icon={faUserCircle} \n//             className=\"topnav-right\" \n//             onClick={handleLogout} \n//           />\n//                   <h2 className=\"dashboard-h2\">Asset Settings</h2>\n//             </div> \n//               <div className=\"dashboardpage\"> \n//                 <div>\n//                 <Form.Item label=\"Add New Asset Type\" className=\"item8\">\n//                     <Space>  \n//                       <Input\n//                         value={newAssetType}\n//                         onChange={(e) => setNewAssetType(e.target.value)}\n//                         placeholder=\"Enter new asset type\"\n//                         />\n//                       <Flex >\n//                         <Flex >\n//                            <div className=\"setbutton\">\n//                           <Tooltip title=\"Add Asset Type\" >\n//                       <Button type=\"default\"  icon={<PlusOutlined /> }\n//                       // onClick={handleAddAssetType} \n//                       />\n//                           </Tooltip>  \n//                           </div>\n//                       </Flex>\n//                       </Flex>\n//                      </Space>\n//                      </Form.Item>\n//                      </div>\n//             </div>\n//           </div>\n//          );\n//         };  \n// export default OtherSettings;","map":{"version":3,"names":["React","useState","Form","Input","Button","Table","Space","PlusOutlined","EditOutlined","SaveOutlined","useNavigate","FontAwesomeIcon","faUserCircle","Sidebar","jsx","_jsx","jsxs","_jsxs","OtherSettings","navigate","form","useForm","assetTypes","setAssetTypes","editingKey","setEditingKey","newAssetType","setNewAssetType","handleLogout","e","preventDefault","console","log","isEditing","record","key","addAssetType","Date","now","toString","type","resetFields","edit","setFieldsValue","save","row","validateFields","newData","index","findIndex","item","splice","push","errInfo","columns","title","dataIndex","editable","render","_","children","onClick","icon","disabled","mergedColumns","map","col","onCell","inputType","editing","EditableCell","_ref","restProps","Item","name","style","margin","rules","required","message","concat","className","layout","placeholder","value","onChange","target","component","components","body","cell","bordered","dataSource","rowClassName","pagination"],"sources":["/Users/kukua/Desktop/Kukua Project/my-app/src/Components/othersettings.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, Button, Table, Space} from 'antd';\nimport { PlusOutlined, EditOutlined, SaveOutlined } from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport '../dashboard.css';\nimport Sidebar from './Sidebar';\n\nconst OtherSettings = () => {\n    const navigate = useNavigate(); \n  const [form] = Form.useForm();\n  const [assetTypes, setAssetTypes] = useState([]);\n  const [editingKey, setEditingKey] = useState('');\n  const [newAssetType, setNewAssetType] = useState('');\n\n  const handleLogout = (e) => {\n             e.preventDefault();\n           \n            console.log('Logging out');\n             navigate('/login');\n          };\n\n  const isEditing = (record) => record.key === editingKey;\n\n  const addAssetType = () => {\n    setAssetTypes([...assetTypes, { key: Date.now().toString(), type: newAssetType }]);\n    setNewAssetType('');\n    form.resetFields();\n  };\n\n  const edit = (record) => {\n    form.setFieldsValue({ type: record.type });\n    setEditingKey(record.key);\n  };\n\n  const save = async (key) => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...assetTypes];\n      const index = newData.findIndex((item) => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item, ...row });\n        setAssetTypes(newData);\n        setEditingKey('');\n      } else {\n        newData.push(row);\n        setAssetTypes(newData);\n        setEditingKey('');\n      }\n    } catch (errInfo) {\n      console.log('Validate Failed:', errInfo);\n    }\n  };\n\n  const columns = [\n    {\n      title: 'Asset Type',\n      dataIndex: 'type',\n      key: 'type',\n      editable: true,\n    },\n    {\n      title: 'Actions',\n      dataIndex: 'actions',\n      key: 'actions',\n      render: (_, record) => {\n        const editable = isEditing(record);\n\n    return editable ? (\n          <Space>\n            <Button onClick={() => save(record.key)} icon={<SaveOutlined />} />\n          </Space>\n        ) : (\n          <Space>\n            <Button disabled={editingKey !== ''} onClick={() => edit(record)} icon={<EditOutlined />} />\n          </Space>\n        );\n      },\n    },\n  ];\n\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        inputType: 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record),\n      }),\n    };\n  });\n\n  const EditableCell = ({ editing, dataIndex, title, inputType, record, index, children, ...restProps }) => {\n    \n    return (\n      <td {...restProps}>\n        {editing ? (\n          <Form.Item\n            name={dataIndex}\n            style={{ margin: 0 }}\n            rules={[\n              {\n                required: true,\n                message: `Please Input ${title}!`,\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  };\n\n  return (\n    <div className=\"dashboard_wrapper\">\n    <Sidebar/>\n       \n        <div className=\"Header\">\n        <FontAwesomeIcon \n        icon={faUserCircle} \n        className=\"topnav-right\" \n        onClick={handleLogout} \n      />\n              <h2 className=\"dashboard-h2\">Asset Settings</h2>\n        </div> \n       \n          <div className=\"dashboardpage\">\n      <Form layout=\"inline\" form={form}>\n        <Form.Item\n          name=\"type\"\n          rules={[{ required: true, message: 'Please input the asset type!' }]}\n        >\n          <Input\n            placeholder=\"Add new asset type\"\n            value={newAssetType}\n            onChange={(e) => setNewAssetType(e.target.value)}\n          />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" onClick={addAssetType} icon={<PlusOutlined />}>\n            Add\n          </Button>\n        </Form.Item>\n      </Form>\n\n      <Form form={form} component={false}>\n        <Table\n          components={{\n            body: {\n              cell: EditableCell,\n            },\n          }}\n          bordered\n          dataSource={assetTypes}\n          columns={mergedColumns}\n          rowClassName=\"editable-row\"\n          pagination={false}\n        />\n      </Form>\n    </div>\n    </div>\n  );\n};\n\nexport default OtherSettings;\n\n// import React, {useState, useContext, createContext} from 'react';\n// import { Form, Input, Select, DatePicker, InputNumber, Upload, Button, Space, Avatar } from 'antd';\n// import { UploadOutlined, UserOutlined, PlusOutlined } from '@ant-design/icons';\n// import { useNavigate } from 'react-router-dom';\n// import {Card } from 'antd';\n// import {Flex, Tooltip} from 'antd';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faUserCircle } from '@fortawesome/free-solid-svg-icons';\n// import Sidebar from './Sidebar';\n// import '../dashboard.css';\n\n// const OtherSettings = () => {\n//     const navigate = useNavigate(); \n    \n    \n//     const { Option } = Select;\n//     // const { assetTypes, setAssetTypes } = useContext(AssetTypeContext);\n//     const [profilePicture, setProfilePicture] = useState(null);\n//     const [newAssetType, setNewAssetType] = useState('');\n    \n    \n//       const onFinish = (values) => {\n//         console.log('Received values:', values);\n//       };\n    \n//       const handleUpload = (info) => {\n//         const reader = new FileReader();\n//         reader.onload = e => {\n//           setProfilePicture(e.target.result);\n//         };\n//         reader.readAsDataURL(info.file.originFileObj);\n//       };\n    \n//       const handleLogout = (e) => {\n//         e.preventDefault();\n       \n//         console.log('Logging out');\n//         navigate('/login');\n//       };\n    \n//       // const handleAddAssetType = () => {\n//       //   setAssetTypes([...assetTypes, newAssetType]);\n//       //   setNewAssetType('');\n//       // };\n    \n//       const columns = [\n//         {\n//           title: 'Asset Type',\n//           dataIndex: 'type',\n//           key: 'type',\n//         },\n//       ];\n    \n//       // const data = assetTypes.map((type, index) => ({ key: index, type }));\n    \n//       return (\n       \n//         <div className=\"dashboard_wrapper\">\n//         <Sidebar/>\n            \n//             <div className=\"Header\">\n//             <FontAwesomeIcon \n//             icon={faUserCircle} \n//             className=\"topnav-right\" \n//             onClick={handleLogout} \n//           />\n//                   <h2 className=\"dashboard-h2\">Asset Settings</h2>\n//             </div> \n            \n//               <div className=\"dashboardpage\"> \n                \n//                 <div>\n//                 <Form.Item label=\"Add New Asset Type\" className=\"item8\">\n//                     <Space>  \n//                       <Input\n//                         value={newAssetType}\n//                         onChange={(e) => setNewAssetType(e.target.value)}\n//                         placeholder=\"Enter new asset type\"\n//                         />\n                     \n//                       <Flex >\n//                         <Flex >\n//                            <div className=\"setbutton\">\n//                           <Tooltip title=\"Add Asset Type\" >\n//                       <Button type=\"default\"  icon={<PlusOutlined /> }\n//                       // onClick={handleAddAssetType} \n                      \n//                       />\n//                           </Tooltip>  \n//                           </div>\n//                       </Flex>\n//                       </Flex>\n                     \n//                      </Space>\n//                      </Form.Item>\n//                      </div>\n//             </div>\n//           </div>\n        \n//          );\n//         };  \n    \n    \n    \n    \n\n// export default OtherSettings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}