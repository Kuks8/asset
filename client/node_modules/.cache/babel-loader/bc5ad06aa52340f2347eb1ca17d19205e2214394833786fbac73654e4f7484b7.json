{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faUserCircle}from'@fortawesome/free-solid-svg-icons';import{Form,Input,Select,DatePicker,Button,Upload}from'antd';import{UploadOutlined}from'@ant-design/icons';import'../dashboard.css';import Sidebar from'./Sidebar';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AssignCustodian=()=>{const navigate=useNavigate();const[form]=Form.useForm();const{Option}=Select;const handleLogout=e=>{e.preventDefault();console.log('Logging out');navigate('/login');};const onFinish=values=>{console.log('Form Values:',values);};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard_wrapper\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"Header\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faUserCircle,className:\"topnav-right\",onClick:handleLogout}),/*#__PURE__*/_jsx(\"h2\",{className:\"dashboard-h2\",children:\"Assign Custodian\"})]}),/*#__PURE__*/_jsxs(Form,{form:form,layout:\"vertical\",onFinish:onFinish,children:[/*#__PURE__*/_jsx(Form.Item,{name:\"employeeName\",label:\"Employee Name\",rules:[{required:true,message:'Please select an employee'}],children:/*#__PURE__*/_jsxs(Select,{placeholder:\"Select Employee\",children:[/*#__PURE__*/_jsx(Option,{value:\"employee1\",children:\"Employee 1\"}),/*#__PURE__*/_jsx(Option,{value:\"employee2\",children:\"Employee 2\"})]})}),/*#__PURE__*/_jsx(Form.Item,{name:\"department\",label:\"Department\",rules:[{required:true,message:'Please select a department'}],children:/*#__PURE__*/_jsxs(Select,{placeholder:\"Select Department\",children:[/*#__PURE__*/_jsx(Option,{value:\"hr\",children:\"HR\"}),/*#__PURE__*/_jsx(Option,{value:\"it\",children:\"IT\"})]})}),/*#__PURE__*/_jsx(Form.Item,{name:\"deviceType\",label:\"Device Type\",rules:[{required:true,message:'Please select a device type'}],children:/*#__PURE__*/_jsxs(Select,{placeholder:\"Select Device Type\",children:[/*#__PURE__*/_jsx(Option,{value:\"laptop\",children:\"Laptop\"}),/*#__PURE__*/_jsx(Option,{value:\"phone\",children:\"Phone\"})]})}),/*#__PURE__*/_jsx(Form.Item,{name:\"serialNumber\",label:\"Serial Number\",rules:[{required:true,message:'Please enter the serial number'}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"Enter Serial Number\"})}),/*#__PURE__*/_jsx(Form.Item,{name:\"pieces\",label:\"Pieces\",rules:[{required:true,message:'Please enter the number of pieces'}],children:/*#__PURE__*/_jsx(Input,{type:\"number\",placeholder:\"Enter Number of Pieces\"})}),/*#__PURE__*/_jsx(Form.Item,{name:\"assignDate\",label:\"Assign Date\",rules:[{required:true,message:'Please select the assign date'}],children:/*#__PURE__*/_jsx(DatePicker,{placeholder:\"Select Date\",style:{width:'100%'}})}),/*#__PURE__*/_jsx(Form.Item,{name:\"devicePicture\",label:\"Device Picture\",valuePropName:\"fileList\",getValueFromEvent:e=>Array.isArray(e)?e:e===null||e===void 0?void 0:e.fileList,rules:[{required:true,message:'Please upload a device picture'}],children:/*#__PURE__*/_jsx(Upload,{listType:\"picture\",beforeUpload:()=>false,children:/*#__PURE__*/_jsx(Button,{icon:/*#__PURE__*/_jsx(UploadOutlined,{}),children:\"Upload Picture\"})})}),/*#__PURE__*/_jsx(Form.Item,{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Assign Device\"})})]})]});};export default AssignCustodian;","map":{"version":3,"names":["React","useState","useNavigate","FontAwesomeIcon","faUserCircle","Form","Input","Select","DatePicker","Button","Upload","UploadOutlined","Sidebar","jsx","_jsx","jsxs","_jsxs","AssignCustodian","navigate","form","useForm","Option","handleLogout","e","preventDefault","console","log","onFinish","values","className","children","icon","onClick","layout","Item","name","label","rules","required","message","placeholder","value","type","style","width","valuePropName","getValueFromEvent","Array","isArray","fileList","listType","beforeUpload","htmlType"],"sources":["/Users/kukua/Desktop/Kukua Project/my-app/src/Components/Assigncustodian.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Form, Input, Select, DatePicker, Button, Upload } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport '../dashboard.css';\nimport Sidebar from './Sidebar';\n\nconst AssignCustodian = () => {\n    const navigate = useNavigate(); \n    const [form] = Form.useForm();\n    const { Option } = Select;\n\n    const handleLogout = (e) => {\n        e.preventDefault();\n      \n       console.log('Logging out');\n        navigate('/login');\n     };\n     const onFinish = (values) => {\n        console.log('Form Values:', values);\n      };\n\n\n    return (\n        <div className=\"dashboard_wrapper\">\n        <Sidebar/>\n\n        <div className=\"Header\">\n        <FontAwesomeIcon \n        icon={faUserCircle} \n        className=\"topnav-right\" \n        onClick={handleLogout} \n      />\n              <h2 className=\"dashboard-h2\">Assign Custodian</h2>\n        </div> \n\n        <Form form={form} layout=\"vertical\" onFinish={onFinish}>\n      {/* Employee Name Dropdown */}\n      <Form.Item\n        name=\"employeeName\"\n        label=\"Employee Name\"\n        rules={[{ required: true, message: 'Please select an employee' }]}\n      >\n        <Select placeholder=\"Select Employee\">\n          <Option value=\"employee1\">Employee 1</Option>\n          <Option value=\"employee2\">Employee 2</Option>\n        </Select>\n      </Form.Item>\n\n      <Form.Item\n        name=\"department\"\n        label=\"Department\"\n        rules={[{ required: true, message: 'Please select a department' }]}\n      >\n        <Select placeholder=\"Select Department\">\n          <Option value=\"hr\">HR</Option>\n          <Option value=\"it\">IT</Option>\n          \n        </Select>\n      </Form.Item>\n\n      {/* Device Type Dropdown */}\n      <Form.Item\n        name=\"deviceType\"\n        label=\"Device Type\"\n        rules={[{ required: true, message: 'Please select a device type' }]}\n      >\n        <Select placeholder=\"Select Device Type\">\n          <Option value=\"laptop\">Laptop</Option>\n          <Option value=\"phone\">Phone</Option>\n          {/* Add more device type options here */}\n        </Select>\n      </Form.Item>\n\n      {/* Serial Number Input */}\n      <Form.Item\n        name=\"serialNumber\"\n        label=\"Serial Number\"\n        rules={[{ required: true, message: 'Please enter the serial number' }]}\n      >\n        <Input placeholder=\"Enter Serial Number\" />\n      </Form.Item>\n\n      {/* Number of Pieces Input */}\n      <Form.Item\n        name=\"pieces\"\n        label=\"Pieces\"\n        rules={[{ required: true, message: 'Please enter the number of pieces' }]}\n      >\n        <Input type=\"number\" placeholder=\"Enter Number of Pieces\" />\n      </Form.Item>\n\n      {/* Assign Date */}\n      <Form.Item\n        name=\"assignDate\"\n        label=\"Assign Date\"\n        rules={[{ required: true, message: 'Please select the assign date' }]}\n      >\n        <DatePicker placeholder=\"Select Date\" style={{ width: '100%' }} />\n      </Form.Item>\n\n      {/* Device Picture Upload */}\n      <Form.Item\n        name=\"devicePicture\"\n        label=\"Device Picture\"\n        valuePropName=\"fileList\"\n        getValueFromEvent={(e) => (Array.isArray(e) ? e : e?.fileList)}\n        rules={[{ required: true, message: 'Please upload a device picture' }]}\n      >\n        <Upload listType=\"picture\" beforeUpload={() => false}>\n          <Button icon={<UploadOutlined />}>Upload Picture</Button>\n        </Upload>\n      </Form.Item>\n\n      {/* Submit Button */}\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Assign Device\n        </Button>\n      </Form.Item>\n    </Form>\n       </div>\n         );\n        };\n        \n        export default AssignCustodian;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}